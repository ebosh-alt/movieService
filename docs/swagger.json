{
  "openapi": "3.0.0",
  "info": {
    "title": "User Service API",
    "version": "1.0.0",
    "description": "API for user authentication and management"
  },
  "servers": [
    {
      "url": "http://localhost:8080/api"
    }
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "summary": "Log in and get tokens",
        "requestBody": {
          "description": "Login credentials",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tokens",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "summary": "Refresh tokens",
        "requestBody": {
          "description": "Refresh token",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "New tokens",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid refresh token"
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout",
        "requestBody": {
          "description": "Refresh token to revoke",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Logout success"
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "List users",
        "parameters": [
          {
            "$ref": "#/components/parameters/Page"
          },
          {
            "$ref": "#/components/parameters/PerPage"
          },
          {
            "$ref": "#/components/parameters/Role"
          },
          {
            "$ref": "#/components/parameters/Status"
          }
        ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListUsersResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create user",
        "requestBody": {
          "description": "User data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get user by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetUserResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found"
          }
        }
      },
      "put": {
        "summary": "Update user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Updated user data",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateUserResponse"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/block": {
      "post": {
        "summary": "Block user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User blocked"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/users/{id}/unblock": {
      "post": {
        "summary": "Unblock user",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User unblocked"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "Page": {
        "name": "page",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 1
        }
      },
      "PerPage": {
        "name": "per_page",
        "in": "query",
        "schema": {
          "type": "integer",
          "default": 10
        }
      },
      "Role": {
        "name": "role",
        "in": "query",
        "schema": {
          "type": "string",
          "enum": ["ROLE_UNSPECIFIED", "USER", "ADMIN"],
          "default": "ROLE_UNSPECIFIED"
        }
      },
      "Status": {
        "name": "status",
        "in": "query",
        "schema": {
          "type": "string",
          "enum": ["STATUS_UNSPECIFIED", "ACTIVE", "BLOCKED"],
          "default": "STATUS_UNSPECIFIED"
        }
      }
    },
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": { "type": "integer" },
          "email": { "type": "string" },
          "full_name": { "type": "string" },
          "role": { "type": "string", "enum": ["USER", "ADMIN"] },
          "status": { "type": "string", "enum": ["ACTIVE", "BLOCKED"] },
          "created_at": { "type": "string", "format": "date-time" },
          "updated_at": { "type": "string", "format": "date-time" }
        },
        "required": ["id","email","full_name","role","status","created_at","updated_at"]
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "password": { "type": "string" }
        },
        "required": ["email","password"]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "access_token": { "type": "string" },
          "refresh_token": { "type": "string" },
          "expires_in": { "type": "integer","description":"seconds until expiration" }
        },
        "required": ["access_token","refresh_token","expires_in"]
      },
      "RefreshRequest": {
        "type": "object",
        "properties": {
          "refresh_token": { "type": "string" }
        },
        "required": ["refresh_token"]
      },
      "RefreshResponse": {
        "type": "object",
        "properties": {
          "access_token": { "type": "string" },
          "refresh_token": { "type": "string" },
          "expires_in": { "type": "integer" }
        },
        "required": ["access_token","refresh_token","expires_in"]
      },
      "LogoutRequest": {
        "type": "object",
        "properties": {
          "refresh_token": { "type": "string" }
        },
        "required": ["refresh_token"]
      },
      "ListUsersResponse": {
        "type": "object",
        "properties": {
          "users": {
            "type": "array",
            "items": { "$ref": "#/components/schemas/User" }
          },
          "total": { "type": "integer" }
        },
        "required": ["users","total"]
      },
      "GetUserResponse": {
        "type": "object",
        "properties": {
          "user": { "$ref": "#/components/schemas/User" }
        },
        "required": ["user"]
      },
      "CreateUserRequest": {
        "type": "object",
        "properties": {
          "email": { "type": "string" },
          "password": { "type": "string" },
          "full_name": { "type": "string" },
          "role": { "type": "string","enum":["USER","ADMIN"] }
        },
        "required": ["email","password","full_name","role"]
      },
      "CreateUserResponse": {
        "type": "object",
        "properties": {
          "user": { "$ref": "#/components/schemas/User" }
        },
        "required": ["user"]
      },
      "UpdateUserRequest": {
        "type": "object",
        "properties": {
          "full_name": { "type": "string" },
          "role": { "type": "string","enum":["USER","ADMIN"] },
          "status": { "type": "string","enum":["ACTIVE","BLOCKED"] }
        },
        "required": ["full_name","role","status"]
      },
      "UpdateUserResponse": {
        "type": "object",
        "properties": {
          "user": { "$ref": "#/components/schemas/User" }
        },
        "required": ["user"]
      }
    }
  }
}
